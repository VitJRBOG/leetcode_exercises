import solution


def test() -> str:
    s = solution.Solution()

    input1 = [[2, 5, 1, 7, 3, 2, 9, 3, 0], [0, 1, 2, 3, 4, 5, 6, 7, 8], [
        1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1], [5645, 9299, 4959, 5582, 3827, 7070, 6659, 1745, 6532, 4170, 1204, 5773, 8604, 1650, 6308, 8001, 923, 2532, 2799, 1767, 2428, 9482, 5273, 4432, 6844, 9308, 7208, 6953, 5795, 4716, 1259, 5589, 7178, 455, 9197, 2106, 4389, 2900, 1606, 9354, 4380, 1797, 2735, 4471, 7882, 8622, 246, 545, 7649, 8809, 1827, 6756, 9947, 9008, 3558, 8645, 6391, 1500, 5905, 2010, 1008, 2199, 5644, 4294, 4981, 8361, 7802, 2498, 9826, 6881, 2845, 241, 5187, 8956, 6805, 7526, 7968, 7811, 6207, 2078, 7320, 5172, 3118, 8593, 1674, 7330, 2963, 5320, 227, 654, 6069, 6664, 7510, 6827, 9701, 7860, 7821, 6471, 8083, 2722, 3314, 8244, 1264, 6821, 2954, 4994, 3486, 3787, 6726, 939, 9379, 2734, 2530, 3354, 1321, 8462, 5906, 4322, 1091, 4180, 8777, 858, 8366, 9526, 638, 1636, 5618, 6954, 1289, 3082, 8074, 9803, 6046, 654, 7294, 7783, 6273, 104, 5081, 2638, 8158, 1653, 1228, 6070, 2864, 640, 4998, 2269, 6505, 2055, 525, 7829, 2439, 7187, 8593, 5527, 2179, 1647, 9882, 9540, 5131, 6433, 983, 6049, 4107, 7812, 3332, 7239, 8079, 9898, 6993, 6536, 7366, 7771, 4502, 6803, 2197, 454, 8756, 1817, 8031, 7456, 7846, 891, 4802, 4440, 6844, 4239, 8746, 7427, 8544, 6909, 4981, 5447, 9533, 9324, 3962, 4795, 8999, 6157, 199, 5558, 8921, 4189, 9509, 6445, 5581, 7828, 2866, 6663, 9868, 4061, 3271, 4369, 8090, 7059, 4760, 1151, 6639, 223, 9939, 2630, 5463, 9250, 7352, 5277, 8812, 8369, 9931, 7980, 2358, 6766, 9452, 3943, 2158, 9995, 4219, 1053, 8114, 8149, 5768, 3748, 2400, 8325, 8315, 996, 422, 7154, 1962, 5983, 2887, 2264, 8056, 8982, 5593, 4854, 93, 4354, 4115, 5759, 47, 7115, 9649, 9140, 9619, 8741, 974, 740, 9428, 7919, 5700, 7913, 506, 3617, 226, 4066, 1156, 7092, 308, 3401, 9956, 2228, 2112, 2389, 3785, 1112, 5353, 4676, 4521, 2446, 6035, 5297, 1074, 2651, 9889, 5075, 5426, 2349, 7980, 1734, 9226, 4264, 5296, 2613, 9844, 1292, 8723, 6914, 6632, 8561, 5982, 5584, 9088, 9293, 3547, 6765, 7088, 7840, 4030, 3030, 2273, 7608, 3244, 4716, 8817, 5791, 4676, 201, 7133, 7459, 6179, 3587, 501, 1791, 9703, 8630, 7483, 543, 1430, 3977, 4144, 3640, 3932, 4622, 2309, 6201, 6448, 6141, 4721, 9746, 4221, 7926, 6450, 158, 685, 5789, 6086, 5060, 3162, 8501, 2596, 8296, 1619, 2900, 3208, 5082, 207, 2938, 212, 6329, 3864, 7612, 7604, 9859, 6715, 4270, 1672, 9751, 9924, 1954, 9201, 9707, 3464, 7460, 7057, 8795, 3366, 1488, 5260, 5759, 9548, 4126, 2289, 1003, 4909, 760, 3495, 7564, 1690, 4701, 8954, 6811, 7709, 5454, 783, 7398, 80, 2669, 8175, 3782, 8773, 3506, 9788, 1833, 4162, 8014, 6018, 3275, 391, 9, 3151, 8364, 4186, 6383, 5791, 2171, 8043, 3094, 4142, 1938, 9920, 1940, 7667, 7887, 9401, 8206, 8792, 7030, 4518, 7864, 6615, 6021, 4925, 6121, 1888, 3822, 3572, 3885, 2910, 8344, 9268, 1768, 8378, 4688, 3876, 1423, 7715, 3684, 524, 1461, 8452, 7663, 4292, 9370, 4061, 5324, 7501, 651, 4342, 1491, 9197, 101, 4035, 2595, 4682, 1748, 2161, 394, 3061, 4736, 3671, 9704, 7746, 1150, 9170, 9191, 5277, 644, 8706, 8121, 8486, 6595, 1477, 6280, 4349, 6470, 3560, 8046, 8614]]

    expectations = [[0, 1, 2, 2, 3, 3, 5, 9, 7], [0, 1, 2, 4, 8, 3, 5, 6, 7], [
        1, 2, 4, 8, 16, 32, 64, 128, 256, 512, 1024], [9, 80, 640, 2112, 104, 524, 545, 644, 1156, 4144, 4162, 4354, 4736, 8452, 8706, 101, 201, 212, 226, 308, 394, 525, 1074, 1091, 1112, 1289, 1292, 1672, 2055, 2179, 2309, 2400, 2596, 3082, 3208, 3332, 4107, 4115, 4170, 4180, 4264, 4292, 4369, 4432, 4676, 4676, 4688, 6273, 6280, 6664, 8206, 8244, 8296, 8325, 8344, 8544, 9088, 9226, 9250, 47, 93, 158, 199, 227, 241, 391, 422, 454, 651, 654, 654, 740, 1053, 1204, 1228, 1264, 1321, 1488, 1606, 1636, 1674, 1797, 1888, 2078, 2106, 2161, 2197, 2228, 2264, 2273, 2498, 2595, 2630, 2722, 2864, 3094, 3464, 3587, 3617, 4126, 4142, 4186, 4294, 4322, 4380, 4389, 4440, 4622, 4682, 4760, 4802, 4994, 5131, 5172, 5187, 5260, 5296, 5320, 5644, 5700, 5768, 6157, 6179, 6308, 6433, 6448, 6532, 6536, 6659, 6914, 7178, 7208, 7456, 8361, 8364, 8369, 8462, 8486, 8593, 8593, 8723, 8741, 8746, 8756, 8773, 8777, 8792, 9008, 9268, 9354, 9482, 9540, 9746, 9920, 207, 246, 455, 543, 685, 760, 783, 858, 996, 1008, 1430, 1477, 1619, 1650, 1690, 1734, 1745, 1748, 1768, 1817, 1827, 1833, 1938, 1940, 1954, 2158, 2199, 2289, 2349, 2358, 2389, 2439, 2446, 2530, 2532, 2613, 2638, 2866, 2900, 2900, 2954, 3118, 3162, 3244, 3354, 3366, 3401, 3640, 3684, 3748, 3864, 3876, 4189, 4239, 4270, 4502, 4518, 4521, 4716, 4716, 4721, 4998, 5060, 5273, 5297, 5324, 5426, 5584, 5645, 5905, 5906, 6018, 6201, 6450, 6470, 6663, 6726, 6756, 7187, 7320, 7330, 7427, 7460, 7746, 7812, 7840, 7968, 8366, 8378, 8501, 8561, 8604, 8614, 8645, 8809, 8812, 8817, 8982, 9293, 9299, 9308, 9324, 9370, 9379, 9428, 9509, 9548, 9826, 9859, 9868, 9889, 9924, 223, 501, 506, 638, 923, 939, 974, 1150, 1259, 1423, 1461, 1491, 1500, 1653, 1962, 2171, 2269, 2428, 2651, 2669, 2734, 2845, 2887, 2963, 3151, 3271, 3275, 3314, 3506, 3560, 3782, 3785, 3977, 4219, 4221, 4342, 4701, 4909, 5277, 5277, 5353, 5447, 5454, 5773, 5795, 6021, 6049, 6329, 6445, 6471, 6505, 6595, 6632, 6803, 6805, 6821, 6881, 6953, 6954, 6993, 7057, 7088, 7239, 7352, 7366, 7459, 7564, 7715, 7811, 7828, 8001, 8315, 8622, 8630, 8795, 8921, 8999, 9140, 9170, 9401, 9452, 9526, 9619, 9649, 9704, 9751, 9788, 9803, 9844, 9882, 9898, 9956, 9995, 891, 983, 1003, 1151, 1647, 1767, 2010, 2735, 2910, 2938, 3030, 3486, 3495, 3558, 3572, 3671, 3787, 3885, 3932, 4035, 4066, 4349, 4471, 4795, 4854, 4925, 4981, 4981, 5075, 5081, 5082, 5463, 5527, 5558, 5581, 5582, 5589, 5593, 5618, 5789, 6035, 6086, 6207, 6715, 6765, 6766, 6811, 6827, 6844, 6844, 7059, 7092, 7398, 7501, 7510, 7526, 7604, 7608, 7649, 7709, 7821, 7829, 7846, 7860, 7864, 7882, 7980, 7980, 8074, 8954, 8956, 9201, 9533, 9701, 9931, 9939, 2799, 3061, 3547, 3822, 3827, 3943, 3962, 4959, 5791, 5791, 5982, 6046, 6069, 6070, 6121, 6383, 6391, 6615, 7030, 7070, 7115, 7154, 7294, 7483, 7612, 7771, 7783, 7802, 7913, 8014, 8056, 8083, 8090, 8114, 9191, 9197, 9197, 9703, 9707, 9947, 1791, 4030, 4061, 4061, 5759, 5759, 5983, 6639, 6909, 7133, 7667, 7887, 7926, 8043, 8046, 8079, 8121, 8149, 6141, 7663, 7919, 8031, 8158, 8175]]

    if len(input1) != len(expectations):
        return "test is invalid"

    for i in range(len(expectations)):
        assert (1 <= len(input1[i]) and len(input1[i]) <= 500)

        for n in range(len(input1[i])):
            assert (0 <= n and n <= 10**4)

        origInput1 = input1[i].copy()

        result = s.sortByBits(input1[i])

        failMsg = (f"bad result for {origInput1}: got {
                   result} expected {expectations[i]}")

        if len(result) != len(expectations[i]):
            return failMsg

        for j in range(len(result)):
            if result[j] != expectations[i][j]:
                return failMsg

    return "PASS"


if __name__ == '__main__':
    print(test())
